kernel boots using BIOS, working on support for UEFI.

refer to 'https://llvm.org/docs/LangRef.html#data-layout' for more info. [use 'gx' to open links in vim]
in the target .json file: 
-> small "e" stands for little endian [E for big endian]
little endian means least significant byte is assigned to lowest address.


#ALLOCATORS
-> bump allocator: fast allocation design but cannot reuse free memory.
-> linked list allocator: slower than bump but address to free memory chunks are stored as nodes
Idea is to store information (pointer to next free chunk) in these free regions
->fixed sized block allocator: making fixed size allocations of power of 2. [8KiB, 16, 32, 64, 128, 256, 512, 1024, 2048] block sized used. each block size class use its own linked list. allocator is FASTER than linked list allocator and most convenient for performance purpose. HENCE PRIMARY ALLOCATOR OF THIS KERNEL


#SCHEDULARS
-> target: implement CFS and ROUND ROBIN.
-> build a smart AI schedular [via no_std compatible neural network]
